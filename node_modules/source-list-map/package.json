{
  "_args": [
    [
      {
        "raw": "source-list-map@^2.0.0",
        "scope": null,
        "escapedName": "source-list-map",
        "name": "source-list-map",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/Users/benjamincoriou/Documents/HTTP/foodradar/node_modules/webpack-sources"
    ]
  ],
  "_from": "source-list-map@>=2.0.0 <3.0.0",
  "_id": "source-list-map@2.0.0",
  "_inCache": true,
  "_location": "/source-list-map",
  "_nodeVersion": "8.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/source-list-map-2.0.0.tgz_1496490051594_0.6906744700390846"
  },
  "_npmUser": {
    "name": "sokra",
    "email": "tobias.koppers@googlemail.com"
  },
  "_npmVersion": "5.0.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "source-list-map@^2.0.0",
    "scope": null,
    "escapedName": "source-list-map",
    "name": "source-list-map",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/webpack-sources"
  ],
  "_resolved": "https://registry.npmjs.org/source-list-map/-/source-list-map-2.0.0.tgz",
  "_shasum": "aaa47403f7b245a92fbc97ea08f250d6087ed085",
  "_shrinkwrap": null,
  "_spec": "source-list-map@^2.0.0",
  "_where": "/Users/benjamincoriou/Documents/HTTP/foodradar/node_modules/webpack-sources",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bugs": {
    "url": "https://github.com/webpack/source-list-map/issues"
  },
  "dependencies": {},
  "description": "Fast line to line SourceMap generator.",
  "devDependencies": {
    "mocha": "^2.2.1",
    "should": "^5.2.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-I2UmuJSRr/T8jisiROLU3A3ltr+swpniSmNPI4Ml3ZCX6tVnDsuZzK7F2hl5jTqbZBWCEKlj5HRQiPExXLgE8A==",
    "shasum": "aaa47403f7b245a92fbc97ea08f250d6087ed085",
    "tarball": "https://registry.npmjs.org/source-list-map/-/source-list-map-2.0.0.tgz"
  },
  "files": [
    "lib"
  ],
  "gitHead": "572d5107c710b590bbbf358401dff9bae8adcc1c",
  "homepage": "https://github.com/webpack/source-list-map",
  "keywords": [
    "source-map"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    }
  ],
  "name": "source-list-map",
  "optionalDependencies": {},
  "readme": "# source-list-map\r\n\r\n## API\r\n\r\n### Example\r\n\r\n``` js\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\n\r\n// Create a new map\r\nvar map = new SourceListMap();\r\n\r\n// Add generated code that is map line to line to some soure\r\nmap.add(\"Generated\\ncode1\\n\", \"source-code.js\", \"Orginal\\nsource\");\r\n\r\n// Add generated code that isn't mapped\r\nmap.add(\"Generated\\ncode2\\n\");\r\n\r\n// Get SourceMap and generated source\r\nmap.toStringWithSourceMap({ file: \"generated-code.js\" });\r\n// {\r\n//   source: 'Generated\\ncode1\\nGenerated\\ncode2\\n',\r\n//   map: {\r\n//      version: 3,\r\n//      file: 'generated-code.js',\r\n//      sources: [ 'source-code.js' ],\r\n//      sourcesContent: [ 'Orginal\\nsource' ],\r\n//      mappings: 'AAAA;AACA;;;'\r\n//    }\r\n// }\r\n\r\n// Convert existing SourceMap into SourceListMap\r\n// (Only the first mapping per line is preserved)\r\nvar fromStringWithSourceMap = require(\"source-list-map\").fromStringWithSourceMap;\r\nvar map = fromStringWithSourceMap(\"Generated\\ncode\", { version: 3, ... });\r\n\r\n```\r\n\r\n### `new SourceListMap()`\r\n\r\n### `SourceListMap.prototype.add`\r\n\r\n``` js\r\nSourceListMap.prototype.add(generatedCode: string)\r\nSourceListMap.prototype.add(generatedCode: string, source: string, originalSource: string)\r\nSourceListMap.prototype.add(sourceListMap: SourceListMap)\r\n```\r\n\r\nAppend some stuff.\r\n\r\n### `SourceListMap.prototype.prepend`\r\n\r\n``` js\r\nSourceListMap.prototype.prepend(generatedCode: string)\r\nSourceListMap.prototype.prepend(generatedCode: string, source: string, originalSource: string)\r\nSourceListMap.prototype.prepend(sourceListMap: SourceListMap)\r\n```\r\n\r\nPrepend some stuff.\r\n\r\n### `SourceListMap.prototype.toString()`\r\n\r\nGet generated code.\r\n\r\n### `SourceListMap.prototype.toStringWithSourceMap`\r\n\r\n``` js\r\nSourceListMap.prototype.toStringWithSourceMap(options: object)\r\n```\r\n\r\nGet generated code and SourceMap. `options` can contains `file` property which defines the `file` property of the SourceMap.\r\n\r\n### `SourceListMap.prototype.mapGeneratedCode`\r\n\r\n``` js\r\nSourceListMap.prototype.mapGeneratedCode(fn: function) : SourceListMap\r\n```\r\n\r\nApplies `fn` to each generated code block (per line). The returned value is set as new generated code. Returns a new SourceListMap.\r\n\r\nRemoving and adding lines is supported. The SourceMap complexity will increase when doing this.\r\n\r\n## Test\r\n\r\n[![Build Status](https://travis-ci.org/webpack/source-list-map.svg)](https://travis-ci.org/webpack/source-list-map)\r\n\r\n## License\r\n\r\nCopyright (c) 2017 JS Foundation\r\n\r\nMIT (http://www.opensource.org/licenses/mit-license.php)",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack/source-list-map.git"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "version": "2.0.0"
}
