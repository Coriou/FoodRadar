{
  "_args": [
    [
      {
        "raw": "babel-plugin-transform-function-bind@^6.22.0",
        "scope": null,
        "escapedName": "babel-plugin-transform-function-bind",
        "name": "babel-plugin-transform-function-bind",
        "rawSpec": "^6.22.0",
        "spec": ">=6.22.0 <7.0.0",
        "type": "range"
      },
      "/Users/benjamincoriou/Documents/HTTP/foodradar/node_modules/babel-preset-stage-0"
    ]
  ],
  "_from": "babel-plugin-transform-function-bind@>=6.22.0 <7.0.0",
  "_id": "babel-plugin-transform-function-bind@6.22.0",
  "_inCache": true,
  "_location": "/babel-plugin-transform-function-bind",
  "_nodeVersion": "6.9.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/babel-plugin-transform-function-bind-6.22.0.tgz_1484872449182_0.9843610317911953"
  },
  "_npmUser": {
    "name": "hzoo",
    "email": "hi@henryzoo.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "babel-plugin-transform-function-bind@^6.22.0",
    "scope": null,
    "escapedName": "babel-plugin-transform-function-bind",
    "name": "babel-plugin-transform-function-bind",
    "rawSpec": "^6.22.0",
    "spec": ">=6.22.0 <7.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/babel-preset-stage-0"
  ],
  "_resolved": "https://registry.npmjs.org/babel-plugin-transform-function-bind/-/babel-plugin-transform-function-bind-6.22.0.tgz",
  "_shasum": "c6fb8e96ac296a310b8cf8ea401462407ddf6a97",
  "_shrinkwrap": null,
  "_spec": "babel-plugin-transform-function-bind@^6.22.0",
  "_where": "/Users/benjamincoriou/Documents/HTTP/foodradar/node_modules/babel-preset-stage-0",
  "dependencies": {
    "babel-plugin-syntax-function-bind": "^6.8.0",
    "babel-runtime": "^6.22.0"
  },
  "description": "Compile function bind operator to ES5",
  "devDependencies": {
    "babel-helper-plugin-test-runner": "^6.22.0"
  },
  "directories": {},
  "dist": {
    "shasum": "c6fb8e96ac296a310b8cf8ea401462407ddf6a97",
    "tarball": "https://registry.npmjs.org/babel-plugin-transform-function-bind/-/babel-plugin-transform-function-bind-6.22.0.tgz"
  },
  "keywords": [
    "babel-plugin"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "amasad",
      "email": "amjad.masad@gmail.com"
    },
    {
      "name": "hzoo",
      "email": "hi@henryzoo.com"
    },
    {
      "name": "jmm",
      "email": "npm-public@jessemccarthy.net"
    },
    {
      "name": "loganfsmyth",
      "email": "loganfsmyth@gmail.com"
    },
    {
      "name": "sebmck",
      "email": "sebmck@gmail.com"
    },
    {
      "name": "thejameskyle",
      "email": "me@thejameskyle.com"
    }
  ],
  "name": "babel-plugin-transform-function-bind",
  "optionalDependencies": {},
  "readme": "# babel-plugin-transform-function-bind\n\n> Compile the new function bind operator `::` to ES5.\n\n## Detail\n\n```js\nobj::func\n// is equivalent to:\nfunc.bind(obj)\n\nobj::func(val)\n// is equivalent to:\nfunc.call(obj, val)\n\n::obj.func(val)\n// is equivalent to:\nfunc.call(obj, val)\n```\n\n[Try in REPL](http://babeljs.io/repl/#?evaluate=true&presets=es2015%2Cstage-0&code=obj%3A%3Afunc%3B%0A%0Aobj%3A%3Afunc(val)%3B%0A%0A%3A%3Aobj.func(val)%3B)\n\n## Example\n\n### Basic\n\n```js\nconst box = {\n  weight: 2,\n  getWeight() { return this.weight; },\n};\n\nconst { getWeight } = box;\n\nconsole.log(box.getWeight()); // prints '2'\n\nconst bigBox = { weight: 10 };\nconsole.log(bigBox::getWeight()); // prints '10'\n\n// Can be chained:\nfunction add(val) { return this + val; }\n\nconsole.log(bigBox::getWeight()::add(5)); // prints '15'\n```\n\n[Try in REPL](http://babeljs.io/repl/#?evaluate=true&presets=es2015%2Cstage-0&code=const%20box%20%3D%20%7B%0A%20%20weight%3A%202%2C%0A%20%20getWeight()%20%7B%20return%20this.weight%3B%20%7D%2C%0A%7D%3B%0A%0Aconst%20%7B%20getWeight%20%7D%20%3D%20box%3B%0A%0Aconsole.log(box.getWeight())%3B%20%2F%2F%20prints%20'2'%0A%0Aconst%20bigBox%20%3D%20%7B%20weight%3A%2010%20%7D%3B%0Aconsole.log(bigBox%3A%3AgetWeight())%3B%20%2F%2F%20prints%20'10'%0A%2F%2F%20bigBox%3A%3AgetWeight()%20is%20equivalent%20to%20getWeight.call(bigBox)%0A%0A%2F%2F%20Can%20be%20chained%3A%0Afunction%20add(val)%20%7B%20return%20this%20%2B%20val%3B%20%7D%0A%0Aconsole.log(bigBox%3A%3AgetWeight()%3A%3Aadd(5))%3B%20%2F%2F%20prints%20'15')\n\n### Using with `document.querySelectorAll`\n\nIt can be very handy when used with `document.querySelectorAll`:\n\n```js\nconst { map, filter } = Array.prototype;\n\nlet sslUrls = document.querySelectorAll('a')\n                ::map(node => node.href)\n                ::filter(href => href.substring(0, 5) === 'https');\n\nconsole.log(sslUrls);\n```\n\n[Try in REPL](http://babeljs.io/repl/#?evaluate=true&presets=es2015%2Cstage-0&code=%0Aconst%20%7B%20map%2C%20filter%20%7D%20%3D%20Array.prototype%3B%0A%0Alet%20sslUrls%20%3D%20document.querySelectorAll('a')%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3A%3Amap(node%20%3D%3E%20node.href)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3A%3Afilter(href%20%3D%3E%20href.substring(0%2C%205)%20%3D%3D%3D%20'https')%3B%0A%0Aconsole.log(sslUrls)%3B%0A)\n\n`document.querySelectorAll` returns a `NodeList` element which is not a plain array, so you normally can't use the `map` function on it, and have to use it this way: `Array.prototype.map.call(document.querySelectorAll(...), node => { ... })`. The above code using the `::` will work because it is equivalent to:\n\n```js\nconst { map, filter } = Array.prototype;\n\nlet sslUrls = document.querySelectorAll('a');\nsslUrls = map.call(sslUrls, node => node.href);\nsslUrls = filter.call(sslUrls, href => href.substring(0, 5) === 'https');\n\nconsole.log(sslUrls);\n```\n\n### Auto self binding\nWhen nothing is specified before the `::` operator, the function is bound to its object:\n\n```js\n$('.some-link').on('click', ::view.reset);\n// is equivalent to:\n$('.some-link').on('click', view.reset.bind(view));\n```\n\n## Installation\n\n```sh\nnpm install --save-dev babel-plugin-transform-function-bind\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"transform-function-bind\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins transform-function-bind script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  plugins: [\"transform-function-bind\"]\n});\n```\n\n## References\n\n* [Proposal](https://github.com/zenparsing/es-function-bind)\n* [Babel Blog: Function Bind Syntax](/blog/2015/05/14/function-bind)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-function-bind"
  },
  "scripts": {},
  "version": "6.22.0"
}
