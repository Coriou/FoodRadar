{
  "_args": [
    [
      {
        "raw": "utf8-byte-length@^1.0.1",
        "scope": null,
        "escapedName": "utf8-byte-length",
        "name": "utf8-byte-length",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "/Users/benjamincoriou/Documents/HTTP/foodradar/node_modules/truncate-utf8-bytes"
    ]
  ],
  "_from": "utf8-byte-length@>=1.0.1 <2.0.0",
  "_id": "utf8-byte-length@1.0.4",
  "_inCache": true,
  "_location": "/utf8-byte-length",
  "_nodeVersion": "6.6.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/utf8-byte-length-1.0.4.tgz_1475174567228_0.7343337591737509"
  },
  "_npmUser": {
    "name": "parshap",
    "email": "parshap+npm@gmail.com"
  },
  "_npmVersion": "3.10.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "utf8-byte-length@^1.0.1",
    "scope": null,
    "escapedName": "utf8-byte-length",
    "name": "utf8-byte-length",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/truncate-utf8-bytes"
  ],
  "_resolved": "https://registry.npmjs.org/utf8-byte-length/-/utf8-byte-length-1.0.4.tgz",
  "_shasum": "f45f150c4c66eee968186505ab93fcbb8ad6bf61",
  "_shrinkwrap": null,
  "_spec": "utf8-byte-length@^1.0.1",
  "_where": "/Users/benjamincoriou/Documents/HTTP/foodradar/node_modules/truncate-utf8-bytes",
  "author": {
    "name": "Carl Xiong",
    "email": "xiongc05@gmail.com"
  },
  "browser": "browser.js",
  "bugs": {
    "url": "https://github.com/parshap/utf8-byte-length/issues"
  },
  "contributors": [
    {
      "name": "Carl Xiong",
      "email": "xiongc05@gmail.com"
    },
    {
      "name": "Parsha Pourkhomami",
      "email": "parshap@gmail.com"
    }
  ],
  "dependencies": {},
  "description": "Get utf8 byte length of string",
  "devDependencies": {
    "tape": "^4.2.2"
  },
  "directories": {},
  "dist": {
    "shasum": "f45f150c4c66eee968186505ab93fcbb8ad6bf61",
    "tarball": "https://registry.npmjs.org/utf8-byte-length/-/utf8-byte-length-1.0.4.tgz"
  },
  "gitHead": "c369b9b4e23ac288fcce9a2aa8fe588fed3b7d4d",
  "homepage": "https://github.com/parshap/utf8-byte-length#readme",
  "keywords": [
    "utf8"
  ],
  "license": "WTFPL",
  "main": "index.js",
  "maintainers": [
    {
      "name": "carltonf",
      "email": "xiongc05@gmail.com"
    },
    {
      "name": "parshap",
      "email": "parshap+npm@gmail.com"
    }
  ],
  "name": "utf8-byte-length",
  "optionalDependencies": {},
  "readme": "# utf8-byte-length [![build status](https://secure.travis-ci.org/parshap/utf8-byte-length.svg?branch=master)](http://travis-ci.org/parshap/utf8-byte-length)\n\nGet the utf8 byte length of a string, taking into account multi-byte\ncharacters and surrogate pairs.\n\nBy default, this module defers to `Buffer.byteLength`. A browser\nimplementation is also provided that doesn't use `Buffer.byteLength`\nminimize build size.\n\n## Example\n\n```js\nvar getLength = require(\"utf8-byte-length\")\nconsole.log(truncate(\"a☃\", 2)) // a = 1 byte, ☃ = 3 bytes\n// -> 4\n```\n\n## API\n\n### `var getLength = require(\"utf8-byte-length\")`\n\n*When using browserify or webpack*, this automatically resolves to an\nimplementation that does not use `Buffer.byteLength`.\n\n### `getLength(string)`\n\nReturns the byte length of `string`. Throws an error if `string` is not\na string.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/parshap/utf8-byte-length.git"
  },
  "scripts": {
    "test": "tape test.js"
  },
  "version": "1.0.4"
}
