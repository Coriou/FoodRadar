{
  "_args": [
    [
      {
        "raw": "uglifyjs-webpack-plugin@^0.4.4",
        "scope": null,
        "escapedName": "uglifyjs-webpack-plugin",
        "name": "uglifyjs-webpack-plugin",
        "rawSpec": "^0.4.4",
        "spec": ">=0.4.4 <0.5.0",
        "type": "range"
      },
      "/Users/benjamincoriou/Documents/HTTP/foodradar/node_modules/webpack"
    ]
  ],
  "_from": "uglifyjs-webpack-plugin@>=0.4.4 <0.5.0",
  "_id": "uglifyjs-webpack-plugin@0.4.6",
  "_inCache": true,
  "_location": "/uglifyjs-webpack-plugin",
  "_nodeVersion": "7.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/uglifyjs-webpack-plugin-0.4.6.tgz_1497909096724_0.6575086114462465"
  },
  "_npmUser": {
    "name": "thelarkinn",
    "email": "sean.larkin@cuw.edu"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "uglifyjs-webpack-plugin@^0.4.4",
    "scope": null,
    "escapedName": "uglifyjs-webpack-plugin",
    "name": "uglifyjs-webpack-plugin",
    "rawSpec": "^0.4.4",
    "spec": ">=0.4.4 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/webpack"
  ],
  "_resolved": "https://registry.npmjs.org/uglifyjs-webpack-plugin/-/uglifyjs-webpack-plugin-0.4.6.tgz",
  "_shasum": "b951f4abb6bd617e66f63eb891498e391763e309",
  "_shrinkwrap": null,
  "_spec": "uglifyjs-webpack-plugin@^0.4.4",
  "_where": "/Users/benjamincoriou/Documents/HTTP/foodradar/node_modules/webpack",
  "author": "",
  "bugs": {
    "url": "https://github.com/webpack-contrib/uglifyjs-webpack-plugin/issues"
  },
  "dependencies": {
    "source-map": "^0.5.6",
    "uglify-js": "^2.8.29",
    "webpack-sources": "^1.0.1"
  },
  "description": "UglifyJS plugin for webpack",
  "devDependencies": {
    "babel-cli": "^6.18.0",
    "babel-core": "^6.21.0",
    "babel-eslint": "^7.1.1",
    "babel-jest": "^18.0.0",
    "babel-plugin-syntax-object-rest-spread": "^6.13.0",
    "babel-plugin-transform-object-rest-spread": "^6.20.2",
    "babel-preset-es2015": "^6.18.0",
    "eslint": "^3.13.1",
    "eslint-config-airbnb": "^14.0.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^3.0.2",
    "eslint-plugin-node": "^4.0.1",
    "eslint-plugin-react": "^6.9.0",
    "git-prepush-hook": "^1.0.1",
    "jest": "^18.1.0",
    "sync-exec": "^0.6.2",
    "webpack": "^2.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "b951f4abb6bd617e66f63eb891498e391763e309",
    "tarball": "https://registry.npmjs.org/uglifyjs-webpack-plugin/-/uglifyjs-webpack-plugin-0.4.6.tgz"
  },
  "engines": {
    "node": ">=4.3.0 <5.0.0 || >=5.10"
  },
  "files": [
    "dist",
    "lib"
  ],
  "gitHead": "689dfa100cfe1ca9201dccfc2628b54500955590",
  "homepage": "https://github.com/webpack-contrib/uglifyjs-webpack-plugin",
  "jest": {
    "collectCoverage": true,
    "moduleFileExtensions": [
      "js"
    ],
    "moduleDirectories": [
      "node_modules"
    ]
  },
  "keywords": [
    "webpack",
    "uglifyjs",
    "plugin"
  ],
  "license": "MIT",
  "main": "./dist",
  "maintainers": [
    {
      "name": "d3viant0ne",
      "email": "wiens.joshua@gmail.com"
    },
    {
      "name": "thelarkinn",
      "email": "sean.larkin@cuw.edu"
    },
    {
      "name": "bebraw",
      "email": "bebraw@gmail.com"
    }
  ],
  "name": "uglifyjs-webpack-plugin",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^1.9 || ^2 || ^2.1.0-beta || ^2.2.0-rc || ^3.0.0"
  },
  "pre-push": [
    "test:all"
  ],
  "readme": "[![npm][npm]][npm-url]\n[![deps][deps]][deps-url]\n[![test][test]][test-url]\n[![coverage][cover]][cover-url]\n[![quality][quality]][quality-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <!-- replace with accurate logo e.g from https://worldvectorlogo.com/ -->\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" vspace=\"\" hspace=\"25\"\n      src=\"https://cdn.rawgit.com/webpack/media/e7485eb2/logo/icon.svg\">\n  </a>\n  <h1>UglifyJS Webpack Plugin</h1>\n\t<p>This plugin uses <a href=\"https://github.com/mishoo/UglifyJS2/tree/v2.x\">UglifyJS v2</a> to minify your JavaScript.<p>\n</div>\n\n> Note that webpack contains the same plugin under `webpack.optimize.UglifyJsPlugin`. This is a standalone version for those that want to control the version of UglifyJS. The documentation is valid apart from the installation instructions in that case.\n\n<h2 align=\"center\">Install</h2>\n\nWith [Yarn](https://yarnpkg.com):\n\n```bash\nyarn add uglifyjs-webpack-plugin --dev\n```\n\nWith npm:\n\n```bash\nnpm install uglifyjs-webpack-plugin --save-dev\n```\n\n**Important!** The plugin has a peer dependency to uglify-js, so in order to use the plugin, also uglify-js has to be installed. The currently (2017/1/25) available uglify-js npm packages; however, do not support minification of ES6 code. In order to support ES6, an ES6-capable, a.k.a. _harmony_, version of UglifyJS has to be provided.\n\nIf your minification target is ES6:\n\n```bash\nyarn add git://github.com/mishoo/UglifyJS2#harmony-v2.8.22 --dev\n```\n\nIf your minification target is ES5:\n\n```bash\nyarn add uglify-js --dev\n```\n\n<h2 align=\"center\">Usage</h2>\n\n```javascript\nconst UglifyJSPlugin = require('uglifyjs-webpack-plugin');\n\nmodule.exports = {\n  entry: {...},\n  output: {...},\n  module: {...},\n  plugins: [\n    new UglifyJSPlugin()\n  ]\n};\n```\n\n<h2 align=\"center\">Options</h2>\n\nThis plugin supports UglifyJS features as discussed below:\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| compress | boolean, object | true | See [UglifyJS documentation](http://lisperator.net/uglifyjs/compress). |\n| mangle | boolean, object | true | See below. |\n| beautify | boolean | false | Beautify output. |\n| output | An object providing options for UglifyJS [OutputStream](https://github.com/mishoo/UglifyJS2/blob/v2.x/lib/output.js) | | Lower level access to UglifyJS output. |\n| comments | boolean, RegExp, function(astNode, comment) -> boolean | Defaults to preserving comments containing `/*!`, `/**!`, `@preserve` or `@license`. | Comment related configuration. |\n| extractComments | boolean, RegExp, function (astNode, comment) -> boolean, object | false | Whether comments shall be extracted to a separate file, see below. |\n| sourceMap | boolean | false | Use SourceMaps to map error message locations to modules. This slows down the compilation. **Important!** `cheap` source map options don't work with the plugin! |\n| test | RegExp, Array<RegExp> | <code>/\\.js($&#124;\\?)/i</code> | Test to match files against. |\n| include | RegExp, Array<RegExp> | | Test only `include` files. |\n| exclude | RegExp, Array<RegExp> | | Files to `exclude` from testing. |\n| extractComments | boolean, RegExp, object | | Extract comments to separate file (see [details](https://github.com/webpack/webpack/commit/71933e979e51c533b432658d5e37917f9e71595a), since webpack 2.3.0) |\n| warningsFilter | function(source) -> boolean | | Allow to filter uglify warnings (since webpack 2.3.0) |\n\n<h2 align=\"center\">Mangling</h2>\n\n`mangle (boolean|object)` - Passing `true` or an object enables and provides options for UglifyJS name mangling. See [UglifyJS documentation](https://github.com/mishoo/UglifyJS2/tree/v2.x#mangle) for mangle options. Example configuration, this will **not** mangle properties (see below):\n\n```javascript\nnew UglifyJsPlugin({\n  mangle: {\n    // Skip mangling these\n    except: ['$super', '$', 'exports', 'require']\n  }\n})\n```\n\n`mangle.props (boolean|object)` - Passing `true` or an object enables and provides options for UglifyJS property mangling - see [UglifyJS documentation](https://github.com/mishoo/UglifyJS2/tree/v2.x#mangleproperties-options) for mangleProperties options.\n\n> Note: the UglifyJS docs warn that [you will probably break your source if you use property mangling](https://github.com/mishoo/UglifyJS2/tree/v2.x#mangling-property-names---mangle-props), so if you aren’t sure why you’d need this feature, you most likely shouldn’t be using it! This is **not** enabled by default.\n\nExample configuration, this will mangle both names and properties:\n\n```javascript\nnew UglifyJsPlugin({\n  mangle: {\n    props: true\n  }\n})\n```\n\n<h2 align=\"center\">Extracting Comments</h2>\n\nThe `extractComments` option can be\n- `true`: All comments that normally would be preserved by the `comments` option will be moved to a separate file. If the original file is named `foo.js`, then the comments will be stored to `foo.js.LICENSE`\n- regular expression (given as `RegExp` or `string`) or a `function (astNode, comment) -> boolean`:\n  All comments that match the given expression (resp. are evaluated to `true` by the function) will be extracted to the separate file. The `comments` option specifies whether the comment will be preserved, i.e. it is possible to preserve some comments (e.g. annotations) while extracting others or even preserving comments that have been extracted.\n- an `object` consisting of the following keys, all optional:\n  - `condition`: regular expression or function (see previous point)\n  - `filename`: The file where the extracted comments will be stored. Can be either a `string` or `function (string) -> string` which will be given the original filename. Default is to append the suffix `.LICENSE` to the original filename.\n  - `banner`: The banner text that points to the extracted file and will be added on top of the original file. will be added to the original file. Can be `false` (no banner), a `string`, or a `function (string) -> string` that will be called with the filename where extracted comments have been stored. Will be wrapped into comment.\nDefault: `/*! For license information please see foo.js.LICENSE */`\n\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars3.githubusercontent.com/u/166921?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/bebraw\">Juho Vepsäläinen</a>\n      </td>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars2.githubusercontent.com/u/8420490?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/d3viant0ne\">Joshua Wiens</a>\n      </td>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars3.githubusercontent.com/u/533616?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/SpaceK33z\">Kees Kluskens</a>\n      </td>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars3.githubusercontent.com/u/3408176?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/TheLarkInn\">Sean Larkin</a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n\n[npm]: https://img.shields.io/npm/v/uglifyjs-webpack-plugin.svg\n[npm-url]: https://npmjs.com/package/uglifyjs-webpack-plugin\n\n[deps]: https://david-dm.org/webpack-contrib/uglifyjs-webpack-plugin.svg\n[deps-url]: https://david-dm.org/webpack-contrib/uglifyjs-webpack-plugin\n\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n\n[test]: https://secure.travis-ci.org/webpack-contrib/uglifyjs-webpack-plugin.svg\n[test-url]: http://travis-ci.org/webpack-contrib/uglifyjs-webpack-plugin\n\n[cover]: https://codecov.io/gh/webpack-contrib/uglifyjs-webpack-plugin/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/uglifyjs-webpack-plugin\n\n[quality]: https://www.bithound.io/github/webpack-contrib/uglifyjs-webpack-plugin/badges/score.svg\n[quality-url]: https://www.bithound.io/github/webpack-contrib/uglifyjs-webpack-plugin\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack-contrib/uglifyjs-webpack-plugin.git"
  },
  "scripts": {
    "build": "babel src -d dist",
    "postinstall": "node lib/post_install.js",
    "preversion": "npm run test:all && npm run build && git commit --allow-empty -am \"Update dist\"",
    "test": "jest --",
    "test:all": "npm run test:coverage && npm run test:lint",
    "test:coverage": "jest --coverage --",
    "test:lint": "eslint . --ext .js --ignore-path .gitignore --cache",
    "test:watch": "jest --watch --"
  },
  "version": "0.4.6"
}
